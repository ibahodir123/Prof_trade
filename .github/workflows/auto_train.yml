name: 🤖 Auto Train ML Model

on:
  schedule:
    # Каждое воскресенье в 2:00 UTC (автоматическое обучение)
    - cron: '0 2 * * 0'
  
  # Ручной запуск
  workflow_dispatch:
    inputs:
      model_type:
        description: 'Тип модели для обучения'
        required: true
        default: 'simple'
        type: choice
        options:
          - simple
          - full
      
      force_retrain:
        description: 'Принудительное переобучение'
        required: false
        default: false
        type: boolean

jobs:
  train-model:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🧠 Train simple model
      if: github.event.inputs.model_type == 'simple' || github.event_name == 'schedule'
      run: |
        echo "🚀 Обучение простой модели..."
        python simple_train.py
        
    - name: 🧠 Train full model
      if: github.event.inputs.model_type == 'full'
      run: |
        echo "🚀 Обучение полной модели..."
        python train_shooting_star_model.py --quick
        
    - name: 📊 Test model
      run: |
        echo "🧪 Тестирование модели..."
        python simple_demo.py
        
    - name: 📝 Commit model files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Добавляем файлы модели
        git add simple_shooting_star_model.h5
        git add simple_shooting_star_scaler.pkl
        git add simple_shooting_star_metadata.json
        
        # Проверяем есть ли изменения
        if git diff --staged --quiet; then
          echo "ℹ️ Нет изменений в файлах модели"
        else
          git commit -m "🤖 Auto-update ML model [skip ci]"
          git push
          echo "✅ Модель обновлена и загружена в репозиторий"
        fi
        
    - name: 📈 Generate training report
      run: |
        echo "📊 Отчет об обучении:" > training_report.md
        echo "=========================" >> training_report.md
        echo "" >> training_report.md
        echo "**Дата обучения:** $(date)" >> training_report.md
        echo "**Тип модели:** ${{ github.event.inputs.model_type || 'simple' }}" >> training_report.md
        echo "**Запуск:** ${{ github.event_name }}" >> training_report.md
        echo "" >> training_report.md
        
        # Проверяем размеры файлов
        if [ -f "simple_shooting_star_model.h5" ]; then
          echo "**Размер модели:** $(ls -lh simple_shooting_star_model.h5 | awk '{print $5}')" >> training_report.md
        fi
        
        if [ -f "simple_shooting_star_metadata.json" ]; then
          echo "**Метаданные модели:**" >> training_report.md
          cat simple_shooting_star_metadata.json >> training_report.md
        fi
        
        echo "" >> training_report.md
        echo "---" >> training_report.md
        echo "🤖 Автоматически сгенерировано GitHub Actions" >> training_report.md
        
    - name: 💾 Upload training report
      uses: actions/upload-artifact@v3
      with:
        name: training-report
        path: training_report.md
        
    - name: 🎉 Training completed
      run: |
        echo "🎉 Обучение модели завершено успешно!"
        echo "📊 Модель готова к использованию"
