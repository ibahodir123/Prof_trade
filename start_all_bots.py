#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö –±–æ—Ç–æ–≤
"""

import subprocess
import time
import os
import sys

def start_bot(script_name, log_file):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"""
    try:
        print(f"üöÄ –ó–∞–ø—É—Å–∫–∞—é {script_name}...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ
        process = subprocess.Popen([
            sys.executable, script_name
        ], stdout=open(log_file, 'w'), stderr=subprocess.STDOUT)
        
        print(f"‚úÖ {script_name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        return process
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {script_name}: {e}")
        return None

def stop_bot_processes():
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏—Ö –±–æ—Ç–æ–≤"""
    bot_scripts = [
        "ml_bot_binance.py",
        "auto_signals_bot.py"
    ]
    
    import platform
    system = platform.system().lower()
    
    for script in bot_scripts:
        try:
            if system == "windows":
                # Windows –∫–æ–º–∞–Ω–¥—ã
                result = subprocess.run(
                    ["tasklist", "/FI", f"IMAGENAME eq python.exe", "/FO", "CSV"],
                    capture_output=True,
                    text=True
                )
                
                if script in result.stdout:
                    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã —Å –Ω–∞—à–∏–º —Å–∫—Ä–∏–ø—Ç–æ–º
                    subprocess.run(
                        ["taskkill", "/F", "/IM", "python.exe", "/FI", f"WINDOWTITLE eq {script}"],
                        check=False
                    )
                    print(f"üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã {script} –Ω–∞ Windows")
            else:
                # Linux/macOS –∫–æ–º–∞–Ω–¥—ã
                result = subprocess.run(
                    ["pgrep", "-f", script], 
                    capture_output=True, 
                    text=True
                )
                
                if result.stdout.strip():
                    pids = result.stdout.strip().split('\n')
                    for pid in pids:
                        if pid.strip():
                            subprocess.run(["kill", pid.strip()], check=False)
                            print(f"üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å {script} (PID: {pid.strip()})")
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ {script}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –±–æ—Ç–æ–≤...")
    
    # –ë–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—à–∏ –±–æ—Ç—ã
    print("üîç –ü–æ–∏—Å–∫ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–æ—Ç–æ–≤...")
    stop_bot_processes()
    time.sleep(1)  # –î–∞–µ–º –≤—Ä–µ–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞–º –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
    processes = []
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç
    main_bot = start_bot("ml_bot_binance.py", "main_bot.log")
    if main_bot:
        processes.append(main_bot)
    
    time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
    
    # –ê–≤—Ç–æ—Å–∏–≥–Ω–∞–ª—ã
    auto_bot = start_bot("auto_signals_bot.py", "auto_signals.log")
    if auto_bot:
        processes.append(auto_bot)
    
    print(f"\nüéâ –ó–∞–ø—É—â–µ–Ω–æ {len(processes)} –±–æ—Ç–æ–≤!")
    print("üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:")
    
    for i, process in enumerate(processes, 1):
        if process and process.poll() is None:
            print(f"  {i}. PID {process.pid} - –ê–∫—Ç–∏–≤–µ–Ω")
        else:
            print(f"  {i}. –ù–µ–∞–∫—Ç–∏–≤–µ–Ω")
    
    print("\nüìù –õ–æ–≥–∏:")
    print("  - main_bot.log - –û—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç")
    print("  - auto_signals.log - –ê–≤—Ç–æ—Å–∏–≥–Ω–∞–ª—ã")
    
    print("\nüîç –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:")
    print("  tail -f main_bot.log")
    print("  tail -f auto_signals.log")
    
    return processes

if __name__ == "__main__":
    processes = main()
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print("\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–æ–≤...")
        for process in processes:
            if process:
                process.terminate()
        print("‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
