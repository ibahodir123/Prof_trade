import time
import psutil
import platform
from datetime import datetime

def test_cpu():
    print("üßÆ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï CPU...")
    start_time = time.time()
    count = 0
    for i in range(1000000):
        count += i * i
    end_time = time.time()
    print(f"–í—ã—á–∏—Å–ª–µ–Ω–∏—è: {end_time - start_time:.2f} —Å–µ–∫")
    return end_time - start_time

def test_memory():
    print("üß† –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–ú–Ø–¢–ò...")
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–º—è—Ç–∏
    memory = psutil.virtual_memory()
    print(f"–û–±—â–∞—è –ø–∞–º—è—Ç—å: {memory.total / (1024**3):.1f} GB")
    print(f"–î–æ—Å—Ç—É–ø–Ω–æ: {memory.available / (1024**3):.1f} GB")
    print(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: {memory.percent:.1f}%")

def system_info():
    print("üñ•Ô∏è –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –°–ò–°–¢–ï–ú–ï:")
    print(f"–û–°: {platform.system()} {platform.version()}")
    print(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {platform.processor()}")
    print(f"–Ø–¥—Ä–∞ CPU: {psutil.cpu_count()}")
    if psutil.cpu_freq():
        print(f"–ß–∞—Å—Ç–æ—Ç–∞ CPU: {psutil.cpu_freq().current:.0f} MHz")
    else:
        print("–ß–∞—Å—Ç–æ—Ç–∞ CPU: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞")

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò WINDOWS")
    print("=" * 50)
    
    system_info()
    print()
    
    cpu_time = test_cpu()
    print()
    
    test_memory()
    print()
    
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
    print(f"‚Ä¢ CPU –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {1000/cpu_time:.0f} –æ–ø–µ—Ä–∞—Ü–∏–π/—Å–µ–∫")
    if cpu_time < 5:
        print("‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!")
    else:
        print("‚Ä¢ CPU –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–¥–ª–µ–Ω–Ω—ã–º –¥–ª—è —Ç—è–∂–µ–ª—ã—Ö –∑–∞–¥–∞—á")